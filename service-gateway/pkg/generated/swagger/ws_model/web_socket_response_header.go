// Code generated by go-swagger; DO NOT EDIT.

package ws_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WebSocketResponseHeader web socket response header
// swagger:model WebSocketResponseHeader
type WebSocketResponseHeader struct {

	// error
	Error *Error `json:"error,omitempty"`

	// response type
	// Required: true
	ResponseType *string `json:"responseType"`
}

// Validate validates this web socket response header
func (m *WebSocketResponseHeader) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateResponseType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WebSocketResponseHeader) validateError(formats strfmt.Registry) error {

	if swag.IsZero(m.Error) { // not required
		return nil
	}

	if m.Error != nil {

		if err := m.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("error")
			}
			return err
		}

	}

	return nil
}

var webSocketResponseHeaderTypeResponseTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Error","UpdateTotalAccessCount","UpdateConnectionCount","UpdateMasterIdentifier","UpdateNodeCount"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		webSocketResponseHeaderTypeResponseTypePropEnum = append(webSocketResponseHeaderTypeResponseTypePropEnum, v)
	}
}

const (

	// WebSocketResponseHeaderResponseTypeError captures enum value "Error"
	WebSocketResponseHeaderResponseTypeError string = "Error"

	// WebSocketResponseHeaderResponseTypeUpdateTotalAccessCount captures enum value "UpdateTotalAccessCount"
	WebSocketResponseHeaderResponseTypeUpdateTotalAccessCount string = "UpdateTotalAccessCount"

	// WebSocketResponseHeaderResponseTypeUpdateConnectionCount captures enum value "UpdateConnectionCount"
	WebSocketResponseHeaderResponseTypeUpdateConnectionCount string = "UpdateConnectionCount"

	// WebSocketResponseHeaderResponseTypeUpdateMasterIdentifier captures enum value "UpdateMasterIdentifier"
	WebSocketResponseHeaderResponseTypeUpdateMasterIdentifier string = "UpdateMasterIdentifier"

	// WebSocketResponseHeaderResponseTypeUpdateNodeCount captures enum value "UpdateNodeCount"
	WebSocketResponseHeaderResponseTypeUpdateNodeCount string = "UpdateNodeCount"
)

// prop value enum
func (m *WebSocketResponseHeader) validateResponseTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, webSocketResponseHeaderTypeResponseTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *WebSocketResponseHeader) validateResponseType(formats strfmt.Registry) error {

	if err := validate.Required("responseType", "body", m.ResponseType); err != nil {
		return err
	}

	// value enum
	if err := m.validateResponseTypeEnum("responseType", "body", *m.ResponseType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WebSocketResponseHeader) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebSocketResponseHeader) UnmarshalBinary(b []byte) error {
	var res WebSocketResponseHeader
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
