swagger: "2.0"
info:
  description: REST API Spec for Gateway
  title: GatewayRestApi
  version: 0.0.1
schemes:
- http
consumes:
- application/json
produces:
- application/json
basePath: /api

paths:

  /geolocation:
    post:
      tags:
        - geolocation
      operationId: add
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Geolocation"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/Geolocation"
        default:
          description: error
          schema:
            $ref: "#/definitions/RestError"

  /session:
    post:
      tags:
        - session
      operationId: validateOrGenerate
      parameters:
        # swagger 2.0 doesn't support cookie param
        # so use request body here for simplicity
        # or it's possible to use `header` for production
        - name: body
          in: body
          schema:
            $ref: "#/definitions/SessionRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SessionResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/RestError"

  /browser_history:
    get:
      tags:
        - BrowserHistory
      operationId: findAll
      parameters:
        - name: itemCountPerPage
          in: query
          type: integer
          format: int64
          default: 10
        - name: currentPageOffset
          in: query
          type: integer
          format: int32
          default: 0
      responses:
        200:
          description: BrowserHistory records with pagination info
          schema:
            $ref: "#/definitions/BrowserHistoryWithPagination"

        default:
          description: generic error response
          schema:
            $ref: "#/definitions/RestError"
    post:
      tags:
        - BrowserHistory
      operationId: addOne
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/BrowserHistory"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/BrowserHistory"
        default:
          description: error
          schema:
            $ref: "#/definitions/RestError"
  /browser_history/{id}:
    parameters:
      - type: integer
        format: int64
        name: id
        in: path
        required: true
    get:
      tags:
        - BrowserHistory
      operationId: findOne
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/BrowserHistory"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BrowserHistory"
        default:
          description: error
          schema:
            $ref: "#/definitions/RestError"

    delete:
      tags:
        - BrowserHistory
      operationId: removeOne
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/RestError"

definitions:

  Geolocation:
    type: object
    properties:
      provider:
        type: string
      timezone:
        type: string
      ip:
        type: string
      googlePlaceID:
        type: string
      latitude:
        type: number
        format: float
      longitude:
        type: number
        format: float
      formatted_address:
        type: string
      common_name:
        type: string
      street_number:
        type: string
      street:
        type: string
      route:
        type: string
      neighborhood:
        type: string
      town:
        type: string
      city:
        type: string
      region:
        type: string
      postal_code:
        type: string
      state:
        type: string
      state_code:
        type: string
      country:
        type: string
      country_code:
        type: string

  SessionRequest:
    type: object
    required:
      - sessionID
    properties:
      sessionID:
        type: string

  SessionResponse:
    type: object
    required:
      - sessionID
      - createdAt
      - updatedAt
      - expiredAt
      - refreshed
      - refreshCount
    properties:
      sessionID:
        type: string
      createdAt:
        type: integer
        format: int64
      updatedAt:
        type: integer
        format: int64
      expiredAt:
        type: integer
        format: int64
      refreshed:
        type: boolean
      refreshCount:
        type: integer
        format: int64

  BrowserHistoryWithPagination:
    type: object
    required:
      - pagination
      - rows
    properties:
      rows:
        type: array
        items:
          $ref: "#/definitions/BrowserHistory"
      pagination:
        $ref: "#/definitions/Pagination"

  Pagination:
    type: object
    required:
      - itemCountPerPage  # limit
      - currentPageOffset # offset
      - totalItemCount    # count
    properties:
      itemCountPerPage:
        type: integer
        format: int64
      currentPageOffset:
        type: integer
        format: int32
      totalItemCount:
        type: integer
        format: int64

  BrowserHistory:
    type: object
    required:
      - browserName
      - browserVersion
      - osName
      - osVersion
      - isMobile
      - language
      - clientTimezone
      - clientTimestamp
      - userAgent
    properties:
      browserName:
        type: string
      browserVersion:
        type: string
      osName:
        type: string
      osVersion:
        type: string
      isMobile:
        type: boolean
      clientTimestamp:
        type: string
      clientTimezone:
        type: string
      language:
        type: string
      userAgent:
        type: string
      # non-required fields
      id:
        type: integer
        format: int64
      uuid:
        type: string

  RestError:
    type: object
    properties:
      timestamp:
        type: string
      code:
        type: integer
        format: int64
      message:
        type: string
      type:
        type: string
        enum:
          - InvalidSession
          - InternalServer
          - RecordDoesNotxist
