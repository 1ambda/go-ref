// Code generated by go-swagger; DO NOT EDIT.

package rest_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SessionResponse session response
// swagger:model SessionResponse
type SessionResponse struct {

	// created at
	// Required: true
	CreatedAt *int64 `json:"createdAt"`

	// expired at
	// Required: true
	ExpiredAt *int64 `json:"expiredAt"`

	// refresh count
	// Required: true
	RefreshCount *int64 `json:"refreshCount"`

	// refreshed
	// Required: true
	Refreshed *bool `json:"refreshed"`

	// session ID
	// Required: true
	SessionID *string `json:"sessionID"`

	// updated at
	// Required: true
	UpdatedAt *int64 `json:"updatedAt"`
}

// Validate validates this session response
func (m *SessionResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateExpiredAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRefreshCount(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRefreshed(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSessionID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SessionResponse) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("createdAt", "body", m.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (m *SessionResponse) validateExpiredAt(formats strfmt.Registry) error {

	if err := validate.Required("expiredAt", "body", m.ExpiredAt); err != nil {
		return err
	}

	return nil
}

func (m *SessionResponse) validateRefreshCount(formats strfmt.Registry) error {

	if err := validate.Required("refreshCount", "body", m.RefreshCount); err != nil {
		return err
	}

	return nil
}

func (m *SessionResponse) validateRefreshed(formats strfmt.Registry) error {

	if err := validate.Required("refreshed", "body", m.Refreshed); err != nil {
		return err
	}

	return nil
}

func (m *SessionResponse) validateSessionID(formats strfmt.Registry) error {

	if err := validate.Required("sessionID", "body", m.SessionID); err != nil {
		return err
	}

	return nil
}

func (m *SessionResponse) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updatedAt", "body", m.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SessionResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SessionResponse) UnmarshalBinary(b []byte) error {
	var res SessionResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
