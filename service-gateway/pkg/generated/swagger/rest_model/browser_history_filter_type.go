// Code generated by go-swagger; DO NOT EDIT.

package rest_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// BrowserHistoryFilterType browser history filter type
// swagger:model BrowserHistoryFilterType
type BrowserHistoryFilterType string

const (

	// BrowserHistoryFilterTypeRecordID captures enum value "RecordID"
	BrowserHistoryFilterTypeRecordID BrowserHistoryFilterType = "RecordID"

	// BrowserHistoryFilterTypeSessionID captures enum value "SessionID"
	BrowserHistoryFilterTypeSessionID BrowserHistoryFilterType = "SessionID"

	// BrowserHistoryFilterTypeBrowserName captures enum value "BrowserName"
	BrowserHistoryFilterTypeBrowserName BrowserHistoryFilterType = "BrowserName"

	// BrowserHistoryFilterTypeLanguage captures enum value "Language"
	BrowserHistoryFilterTypeLanguage BrowserHistoryFilterType = "Language"

	// BrowserHistoryFilterTypeClientTimezone captures enum value "ClientTimezone"
	BrowserHistoryFilterTypeClientTimezone BrowserHistoryFilterType = "ClientTimezone"

	// BrowserHistoryFilterTypeUserAgent captures enum value "UserAgent"
	BrowserHistoryFilterTypeUserAgent BrowserHistoryFilterType = "UserAgent"
)

// for schema
var browserHistoryFilterTypeEnum []interface{}

func init() {
	var res []BrowserHistoryFilterType
	if err := json.Unmarshal([]byte(`["RecordID","SessionID","BrowserName","Language","ClientTimezone","UserAgent"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		browserHistoryFilterTypeEnum = append(browserHistoryFilterTypeEnum, v)
	}
}

func (m BrowserHistoryFilterType) validateBrowserHistoryFilterTypeEnum(path, location string, value BrowserHistoryFilterType) error {
	if err := validate.Enum(path, location, value, browserHistoryFilterTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this browser history filter type
func (m BrowserHistoryFilterType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBrowserHistoryFilterTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
