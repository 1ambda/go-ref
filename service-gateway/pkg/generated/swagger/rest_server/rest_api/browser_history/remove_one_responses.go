// Code generated by go-swagger; DO NOT EDIT.

package browser_history

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	rest_model "github.com/1ambda/go-ref/service-gateway/pkg/generated/swagger/rest_model"
)

// RemoveOneNoContentCode is the HTTP code returned for type RemoveOneNoContent
const RemoveOneNoContentCode int = 204

/*RemoveOneNoContent Deleted

swagger:response removeOneNoContent
*/
type RemoveOneNoContent struct {
}

// NewRemoveOneNoContent creates RemoveOneNoContent with default headers values
func NewRemoveOneNoContent() *RemoveOneNoContent {

	return &RemoveOneNoContent{}
}

// WriteResponse to the client
func (o *RemoveOneNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*RemoveOneDefault error

swagger:response removeOneDefault
*/
type RemoveOneDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *rest_model.RestError `json:"body,omitempty"`
}

// NewRemoveOneDefault creates RemoveOneDefault with default headers values
func NewRemoveOneDefault(code int) *RemoveOneDefault {
	if code <= 0 {
		code = 500
	}

	return &RemoveOneDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the remove one default response
func (o *RemoveOneDefault) WithStatusCode(code int) *RemoveOneDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the remove one default response
func (o *RemoveOneDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the remove one default response
func (o *RemoveOneDefault) WithPayload(payload *rest_model.RestError) *RemoveOneDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove one default response
func (o *RemoveOneDefault) SetPayload(payload *rest_model.RestError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveOneDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
