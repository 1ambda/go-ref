// Code generated by go-swagger; DO NOT EDIT.

package rest_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "REST API Spec for Gateway",
    "title": "GatewayRestApi",
    "version": "0.0.1"
  },
  "basePath": "/api",
  "paths": {
    "/access": {
      "get": {
        "tags": [
          "access"
        ],
        "operationId": "findAll",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "default": 10,
            "name": "itemCountPerPage",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "name": "currentPageOffset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "access records with pagination info",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "rows": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/access"
                  }
                }
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "access"
        ],
        "operationId": "addOne",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/access"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/access"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/access/{id}": {
      "get": {
        "tags": [
          "access"
        ],
        "operationId": "findOne",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/access"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/access"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "access"
        ],
        "operationId": "updateOne",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/access"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/access"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "access"
        ],
        "operationId": "removeOne",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/session": {
      "post": {
        "tags": [
          "session"
        ],
        "operationId": "validateOrGenerate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SessionResponse"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SessionRequest": {
      "type": "object",
      "required": [
        "sessionID"
      ],
      "properties": {
        "sessionID": {
          "type": "string"
        }
      }
    },
    "SessionResponse": {
      "type": "object",
      "required": [
        "sessionID",
        "createdAt",
        "updatedAt",
        "expiredAt",
        "refreshed",
        "refreshCount"
      ],
      "properties": {
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "expiredAt": {
          "type": "integer",
          "format": "int64"
        },
        "refreshCount": {
          "type": "integer",
          "format": "int64"
        },
        "refreshed": {
          "type": "boolean"
        },
        "sessionID": {
          "type": "string"
        },
        "updatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "access": {
      "type": "object",
      "required": [
        "browserName",
        "browserVersion",
        "osName",
        "osVersion",
        "isMobile",
        "language",
        "timezone",
        "timestamp",
        "userAgent"
      ],
      "properties": {
        "browserName": {
          "type": "string"
        },
        "browserVersion": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isMobile": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "osName": {
          "type": "string"
        },
        "osVersion": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "pagination": {
      "type": "object",
      "required": [
        "itemCountPerPage",
        "currentPageOffset",
        "totalItemCount"
      ],
      "properties": {
        "currentPageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "itemCountPerPage": {
          "type": "integer",
          "format": "int64"
        },
        "totalItemCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "REST API Spec for Gateway",
    "title": "GatewayRestApi",
    "version": "0.0.1"
  },
  "basePath": "/api",
  "paths": {
    "/access": {
      "get": {
        "tags": [
          "access"
        ],
        "operationId": "findAll",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "default": 10,
            "name": "itemCountPerPage",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "name": "currentPageOffset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "access records with pagination info",
            "schema": {
              "$ref": "#/definitions/findAllOKBody"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "access"
        ],
        "operationId": "addOne",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/access"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/access"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/access/{id}": {
      "get": {
        "tags": [
          "access"
        ],
        "operationId": "findOne",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/access"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/access"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "access"
        ],
        "operationId": "updateOne",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/access"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/access"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "access"
        ],
        "operationId": "removeOne",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/session": {
      "post": {
        "tags": [
          "session"
        ],
        "operationId": "validateOrGenerate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SessionResponse"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SessionRequest": {
      "type": "object",
      "required": [
        "sessionID"
      ],
      "properties": {
        "sessionID": {
          "type": "string"
        }
      }
    },
    "SessionResponse": {
      "type": "object",
      "required": [
        "sessionID",
        "createdAt",
        "updatedAt",
        "expiredAt",
        "refreshed",
        "refreshCount"
      ],
      "properties": {
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "expiredAt": {
          "type": "integer",
          "format": "int64"
        },
        "refreshCount": {
          "type": "integer",
          "format": "int64"
        },
        "refreshed": {
          "type": "boolean"
        },
        "sessionID": {
          "type": "string"
        },
        "updatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "access": {
      "type": "object",
      "required": [
        "browserName",
        "browserVersion",
        "osName",
        "osVersion",
        "isMobile",
        "language",
        "timezone",
        "timestamp",
        "userAgent"
      ],
      "properties": {
        "browserName": {
          "type": "string"
        },
        "browserVersion": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isMobile": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "osName": {
          "type": "string"
        },
        "osVersion": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "findAllOKBody": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/pagination"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/access"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "pagination": {
      "type": "object",
      "required": [
        "itemCountPerPage",
        "currentPageOffset",
        "totalItemCount"
      ],
      "properties": {
        "currentPageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "itemCountPerPage": {
          "type": "integer",
          "format": "int64"
        },
        "totalItemCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}`))
}
